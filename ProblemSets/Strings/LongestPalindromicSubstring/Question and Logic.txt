Question : 

Given a string, find the longest substring which is palindrome.

**For example,**

```
Input: Given string :"forgeeksskeegfor",
Output: "geeksskeeg"

Input: Given string :"Geeks",
Output: "ee"
```
Answer :

1. Brute-Force Approach : O(n^3) Complexity
    - The simple approach is to check each substring whether the substring is a palindrome or not.
    - To do this first, run three nested loops, the outer two loops pick all substrings one by one by fixing the corner characters, the inner loop checks whether the picked substring is palindrome or not.
2. Optimal Approach : O(n^2) Complexity [Dynamic Programming]
    - Maintain a boolean table[n][n] that is filled in bottom up manner.
    - The value of table[i][j] is true, if the substring is palindrome, otherwise false.
    - To calculate table[i][j], check the value of table[i+1][j-1], if the value is true and str[i] is same as str[j], then we make table[i][j] true.
    - Otherwise, the value of table[i][j] is made false.
    - We have to fill table previously for substring of length = 1 and length =2 because as we are finding , if table[i+1][j-1] is true or false , so in case of (i) length == 1 , lets say i=2 , j=2 and i+1,j-1 doesn’t lies between [i , j] (ii) length == 2 ,lets say i=2 , j=3 and i+1,j-1 again doesn’t lies between [i , j].