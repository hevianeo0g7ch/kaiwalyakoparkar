**Question :** 

Given a string, we have to find out all subsequences of it. A String is a subsequence of a given String, that is generated by deleting some character of a given string without changing its order.Examples:

```
Input : abc
Output : a, b, c, ab, bc, ac, abc

Input : aaa
Output : a, aa, aaa
```

**Logic:**

1. Brute-force approach O(n^2)
    - Take input as string " s "
    - Declare an arraylist " as "
    - Firstly traversely every element in the string and print only if it not present in the arraylist " as "
    - and add that element to " as "
    - run two for loops " i " and " j ".  " i " from 0 and " j " from " i+1 "
    - Make a "temp" string and add ith element and jth element to it and if it is not present in the arraylist the print it and add it to arraylist as well
    - Then if j-1 is ≥ 2 then also check if the substring from i to j+1 is not present in the arraylist and print the substring and adde it to arraylist as well.
    
2. Optimal Approach O(n)
    - Take a input as string " s "
    - Declare a Arrayslist of Strings " as "
    - visualize a matrix with size " s.length " and travese it diagonally
    - While traversing " s " check if the substring from " i " to " j+1 " is already present in the arraylist " as "
    - if not then print the substring from " i " to " j+1 " and add it to arraylist " as "
    - if yes then go to next " if " statement
    - while going to the next if statement make a " temp " string and add charAt( i ) and charAt( j ) into it.
    - If the " temp " is not present in the arraylist " as " and i ≠ j then print the " temp " and add the " temp " to arraylist " as "